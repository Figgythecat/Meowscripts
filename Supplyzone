//@version=5
indicator("Hourly Supply Zones with Confluence (Filtered)", overlay=true)

// Input parameters
fibLevel = input.float(0.618, title="Fibonacci Supply Level")
rsiThreshold = input.int(75, title="RSI Overbought Threshold")  // Stricter RSI threshold
supplyColor = input.color(color.red, title="Supply Zone Color")
vwapDistanceFactor = input.float(1.01, title="VWAP Distance Factor (e.g., 1.01 for 1% above VWAP)")
volumeMultiplier = input.float(1.5, title="Volume Multiplier (e.g., 1.5x avg volume)")
atrMultiplier = input.float(1.2, title="ATR Multiplier (e.g., 1.2x avg range)")

// Variables to store the current hour's high, low, and supply level
var float highHour = na
var float lowHour = na
var float supplyLevel = na

// Detect the start of a new hour
newHour = (na(time[1]) ? false : time("60") != time[1])

// Recalculate the hourly high and low at the start of a new hour
if (newHour)
    highHour := high  // Reset high for the new hour
    lowHour := low  // Reset low for the new hour
else
    highHour := math.max(highHour, high)  // Track highest price within the hour
    lowHour := math.min(lowHour, low)  // Track lowest price within the hour

// Calculate the supply level using Fibonacci retracement
supplyLevel := highHour - (highHour - lowHour) * fibLevel

// Calculate VWAP, RSI, Volume, and ATR for confluence
vwap = ta.vwap(close)
rsi = ta.rsi(close, 14)
volumeCondition = volume > ta.sma(volume, 20) * volumeMultiplier  // Current volume above 20-period average
atrCondition = (high - low) > ta.atr(14) * atrMultiplier  // Range is larger than average ATR
vwapCondition = close > vwap * vwapDistanceFactor  // Price is above a certain percentage over VWAP

// Define the filtered supply zone condition with confluence
isSupplyZone = close > supplyLevel and rsi > rsiThreshold and close > vwap and volumeCondition and atrCondition and vwapCondition

// Plot the supply zone when conditions are met
plotshape(series=isSupplyZone, location=location.abovebar, color=supplyColor,
          style=shape.labeldown, text="Supply Zone", size=size.small)

// Define alert condition for supply zone
alertcondition(isSupplyZone, title="New Supply Zone Detected", message="New Supply Zone Detected")
